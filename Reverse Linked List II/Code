# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
      if not head or left==right:return head
      prev=dummy=ListNode(None)
      prev.next=head
      for i in range(left-1):
        prev=prev.next
      tail=prev.next
      for i in range(right-left):
        curr=prev.next
        prev.next=tail.next
        tail.next=tail.next.next
        prev.next.next=curr
      return dummy.next
